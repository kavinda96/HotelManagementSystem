@page
@model RazorPagesMovie.Pages.Calender.CalendarViewModel
@{
    ViewData["Title"] = "Calender";
}
<link rel="stylesheet" href="~/css/calender.css" />



<div class="card mb-2" id="headbox">
    <div class="card-body text-center">
        <h2 class="m-0 display-6 display-md-5 display-lg-4">Reservations Calendar</h2>
    </div>
</div>

<!-- Date Range Selector -->
<div class="d-flex justify-content-center mb-3">
    <label for="startDate" class="me-2">Start Date:</label>
    <input type="date" id="startDate" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" class="form-control me-2" />

    <label for="endDate" class="me-2">End Date:</label>
    <input type="date" id="endDate" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" class="form-control me-2" />

    <button id="filterButton" class="btn btn-primary">Filter</button>
</div>

<!-- Calendar Table (same as before) -->
<div class="calendar-wrapper">
    <table>
        <thead>
            <tr>
                <th>Room No</th>
                @foreach (var date in Model.DateRange)
                {
                    <th>@date.ToString("dd MMM")</th>
                }
            </tr>
        </thead>
        <tbody>
            @{
                // Create a lookup for reservations based on RoomId and Date
                var reservationLookup = Model.Reservations
                .Select(r => new { r.RoomId, r.CheckInDate, r.CheckOutDate, r.ResevationId }) // Include reservation Id
                .ToList();
            }
            @foreach (var room in Model.Rooms)
            {
                <tr>
                    <td>@room.RoomNo</td>
                    @foreach (var date in Model.DateRange)
                    {
                        // Find the reservation for this room and date
                        var reservation = reservationLookup
                        .FirstOrDefault(r =>
                        r.RoomId == room.Id &&
                        r.CheckInDate <= date &&
                        r.CheckOutDate >= date);

                        if (reservation != null)
                        {
                            // Create a link for the reserved date
                            <td class="reserved">
                                <a href="/Billing?id=@reservation.ResevationId" style="color: white; text-decoration: none;">...</a>
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="loadingOverlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(255, 255, 255, 0.8); z-index:1000; text-align:center;">
    <img src="~/loading.gif" alt="Loading..." style="margin-top:20%; width:100px; height:auto;" />
</div>


<script>
    function showLoader() {
        $("#loadingOverlay").show(); // Show the loader
    }

    function hideLoader() {
        $("#loadingOverlay").hide(); // Hide the loader
    }

    $(document).ready(function () {
        // Show loader on form submission
        $("form").on("submit", function () {
            showLoader(); // Show loader when any form is submitted
        });
    });


    $(document).ready(function () {
        $('#filterButton').click(function () {
            showLoader();
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();

            // Trigger AJAX request to update the calendar view
            $.ajax({
                url: '@Url.Page("/Calender/CalendarView")',
                type: 'GET',
                data: {
                    startDate: startDate,
                    endDate: endDate
                },
                success: function (response) {
                    hideLoader();
                    // Update the calendar with the new data
                    $('body').html(response);
                },
                error: function (error) {
                    hideLoader();
                    alert("Error fetching data.");
                }
            });
        });
    });
</script>