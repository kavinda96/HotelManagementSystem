@page
@model RazorPagesMovie.Pages.Billing.IndexModel
@{
    ViewData["Title"] = "Index";
}
<div class="card mb-2" style="background-color:darkslateblue">
    <div class="card-body d-flex justify-content-center align-items-center mb-2" style="height: 50px ; overflow: hidden;">
        <h2 style="color: white">Billing Information</h2>
    </div>
</div>
<div class="row">
    <div class="col-md-6" id="invoice_details">
        <div class="printtab">
        <table class="table table-bordered invoice-info ">
            <thead>
                <tr class="keep-row">
                    <th  colspan="2">Invoice Details</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Reservation != null)
                {
                    <input type="hidden" asp-for="Reservation.MasterbillId">
                    <input type="hidden" asp-for="Reservation.Id">
                    <input type="hidden" asp-for="Reservation.CustomerName">
                    <input type="hidden" asp-for="Reservation.SelectedRooms">
                    <input type="hidden" asp-for="Reservation.SelectedRoomsNos">
                    <input type="hidden" asp-for="Reservation.CheckInDate">
                    <input type="hidden" asp-for="Reservation.ExpectedCheckOutDate">
                    <input type="hidden" asp-for="Reservation.Mobile">
                    <input type="hidden" asp-for="Reservation.Address">
                    <input type="hidden" asp-for="Reservation.Country">
                    <input type="hidden" asp-for="Reservation.GuestCount">
                    <input type="hidden" asp-for="Reservation.NIN">


                    <tr class="keep-row">
                        <td >Invoice No:</td>
                        <td>@Model.Reservation.CheckInDate.ToString("yyyyMMdd") - @Model.Reservation.Id</td>
                    </tr>
                    <tr class="keep-row">
                        <td>Status:</td>
                        <td>


                                @if (@Model.Reservation.status == 0)
                                {
                                    <div>PENDING</div>
                                }
                                else if (@Model.Reservation.status == 1)
                                {
                                    <div>Checked-In</div>
                                }
                                else if (@Model.Reservation.status == 2)
                                {
                                    <div>Checked-Out</div>
                                }
                                else if (@Model.Reservation.status == 3)
                                {
                                    <div>Finalized Invoice</div>
                                }

                            
                            
                            
                            
                            
                            
                           
                    </tr>
                    <tr class="keep-row">
                        <td>Customer Name:</td>
                        <td>@Model.Reservation.CustomerName</td>
                    </tr>
                    <tr class="keep-row">
                        <td>Reserved Rooms:</td>
                        <td>@Model.Reservation.SelectedRoomsNos</td>
                    </tr>
                    <tr>
                        <td>Check-In Initialize:</td>
                        <td>


                            <form id="checkInForm" method="post" asp-page-handler="CheckIn" >
                                <input type="hidden" name="sid" value="@Model.Reservation.Id" />
                                <div class="form-row align-items-center">
                                    <div class="col-auto">
                                        <input asp-for="Reservation.CheckInDate" class="form-control mb-2" />
                                    </div>
                                    <div class="col-auto ml-auto">
                                        <button type="submit" class="btn btn-success mb-2 btn-sm" id="checkInButton">
                                            Check In
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </td>
                    </tr>

                    <tr class="keep-row">
                        <td>Check-In Date:</td>
                        <td>@Model.Reservation.CheckInDate.ToShortDateString()</td>
                    </tr>



                    <tr class="print-exclude">
                        <td>Check-Out Date:</td>
                
                        <td>

                            @await Html.PartialAsync("_partialEditCheckoutDate", @Model.Reservation)
                          
                        </td>
                    </tr>

                  

                 
                   
                    <tr class="print-exclude">
           

                        <td>Initialize Check-Out</td>
                        <td>


                            <form method="post" asp-page-handler="CheckOut" id="checkOutForm">
                                <input type="hidden" name="sid" value="@Model.Reservation.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                   Check Out
                                </button>
                            </form>
                        </td>
                    </tr>


                   

                }
                else
                {

                    <tr>
                        <td colspan="2">Reservation not found.</td>
                    </tr>
                }
            </tbody>
        </table>

        </div>
    </div>

    
    
    <div class="col-md-6">
        <div class="print-exclude">
        <table class="table-borderless" style="min-width:100%">

           @*  <table class="table"> *@
                <thead>
                    <tr>
                        <th colspan="2" class="text-center">Add Billing Transactions</th>
                    </tr>
                </thead>
                <tbody>
                    <form method="post" id="billingForm">
                    <tr>
                        <td class="fw-bold">Billing Category</td>
                        <td>
                            <select asp-for="NewTransaction.Category" class="form-control">
                                <option value="1">Food</option>
                                <option value="2">VAS</option>
                                <option value="3">ETC</option>
                            </select>
                            <span asp-validation-for="NewTransaction.Category" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                       @*  <td class="fw-bold">Bill Item</td>
                        <td> *@
                          @*   <input asp-for="NewTransaction.BillingItem" class="form-control" required />
                            <span asp-validation-for="NewTransaction.BillingItem" class="text-danger"></span> *@

                            <!-- Bill Item Input Field with Autocomplete -->
@*                             <input id="foodItemSearch" class="form-control" placeholder="Search for a food item" required />
 *@
                            <!-- Hidden field to hold the selected food item ID -->
@*                             <input type="hidden" id="selectedFoodId" asp-for="NewTransaction.BillingItem" />
 *@

                        <td class="fw-bold">Bill Item</td>
                        <td>
                            <input id="foodItemSearch" class="form-control" placeholder="Search for a food item" required />
                            <input type="hidden" id="selectedFoodId" asp-for="NewTransaction.BillingItem" />
                        </td>

@*                         </td>
 *@                    </tr>
                    <tr>
                        <td class="fw-bold">Item Amount</td>
                        <td>
                            <input asp-for="NewTransaction.ItemPrice" class="form-control" type="number" step="0.01" required />
                            <span asp-validation-for="NewTransaction.ItemPrice" class="text-danger"></span>


                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Item Quantity</td>
                        <td>
                            <input asp-for="NewTransaction.ItemQty" class="form-control" type="number" step="0.01" required />
                            <span asp-validation-for="NewTransaction.ItemQty" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Description</td>
                        <td>
                            <textarea asp-for="NewTransaction.Description" class="form-control"></textarea>
                            <span asp-validation-for="NewTransaction.Description" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" class="text-end">
                            <input type="hidden" asp-for="Reservation.MasterbillId" />
                            <input type="hidden" asp-for="Reservation.Id" />
                            <input type="hidden" asp-for="Reservation.CustomerName" />
                            <input type="hidden" asp-for="Reservation.SelectedRooms" />
                            <input type="hidden" asp-for="Reservation.CheckInDate" />
                            <input type="hidden" asp-for="Reservation.ExpectedCheckOutDate" />
                            <input type="hidden" asp-for="Reservation.Mobile" />
                            <input type="hidden" asp-for="Reservation.Address" />
                            <input type="hidden" asp-for="Reservation.Country" />
                            <input type="hidden" asp-for="Reservation.GuestCount" />
                            <input type="hidden" asp-for="Reservation.NIN" />

                            <button type="submit" id="submitBtn" class="btn btn-success rounded-pill mt-2 mb-4" disabled>Add Transaction</button>

                        </td>
                    </tr>
                   
                    </form>
                </tbody>
       </table>

    </div>
    </div>

</div>






@* this is to printing pdf purpose *@
<div class="col-md-12" id="invoice_header">
<table class="header-table" style="display:none">
    <tr>
      <th>
            <h1 class="name">Hotel Ritas</h1>
        
        </th>
       
    </tr>
        <tbody>
    <tr>
         
            <td>
               
                Narigama, Hikkaduwa
               
            </td>

    </tr>

        </tbody>
</table>
</div>

<div class="col-md-6" id="invoice_display">
<table class="table table-bordered invoice-info"  style="display:none" >
    <thead>
        <tr class="keep-row">
            <th colspan="2">Invoice Details</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Reservation != null)
        {
            <input type="hidden" asp-for="Reservation.MasterbillId">
            <input type="hidden" asp-for="Reservation.Id">
            <input type="hidden" asp-for="Reservation.CustomerName">
            <input type="hidden" asp-for="Reservation.SelectedRooms">
            <input type="hidden" asp-for="Reservation.SelectedRoomsNos">
            <input type="hidden" asp-for="Reservation.CheckInDate">
            <input type="hidden" asp-for="Reservation.ExpectedCheckOutDate">
            <input type="hidden" asp-for="Reservation.Mobile">
            <input type="hidden" asp-for="Reservation.Address">
            <input type="hidden" asp-for="Reservation.Country">
            <input type="hidden" asp-for="Reservation.GuestCount">
            <input type="hidden" asp-for="Reservation.NIN">


            <tr class="keep-row">
                <td>Invoice No:</td>
                <td>@Model.Reservation.CheckInDate.ToString("yyyyMMdd") - @Model.Reservation.Id</td>
            </tr>
            <tr class="keep-row">
                <td>Status:</td>
                <td>


                    @if (@Model.Reservation.status == 0)
                    {
                        <div>PENDING</div>
                    }
                    else if (@Model.Reservation.status == 1)
                    {
                        <div>Checked-In</div>
                    }
                    else if (@Model.Reservation.status == 2)
                    {
                        <div>Checked-Out</div>
                    }
                    else if (@Model.Reservation.status == 3)
                    {
                        <div>Finalized Invoice</div>
                    }




            </tr>
            <tr class="keep-row">
                <td>Customer Name:</td>
                <td>@Model.Reservation.CustomerName</td>
            </tr>
            <tr class="keep-row">
                <td>Reserved Rooms:</td>
                <td>@Model.Reservation.SelectedRoomsNos</td>
            </tr>
           

            <tr class="keep-row">
                <td>Check-In Date:</td>
                    <td>@Model.Reservation.CheckInDate.ToString("yyyy-MM-dd")</td>
            </tr>
            <tr class="keep-row">
                <td>Check-Out Date:</td>
                    <td>@Model.Reservation.ExpectedCheckOutDate.ToString("yyyy-MM-dd")</td>
            </tr>



        }
        else
        {

            <tr>
                <td colspan="2">Reservation not found.</td>
            </tr>
        }
    </tbody>
</table>
</div>




















<!-- Display Billing Transactions -->
<h4 class="border border-2 border" style="background-color: #8294C4; color:azure;">Billing Transactions</h4>
@if (Model.BillingTransactions != null && Model.BillingTransactions.Any())
{
    <div class="printtab">
    <div id="billing_table">
    <table class="table table-bordered" id="invoiceTable">
        <thead>
            <tr>
                <th class="center-text">#</th>
@*                 <th class="center-text">Date</th>
 *@                <th class="center-text" style="  min-width: 120px;">Date</th>
                <th class="center-text">Category</th>
                <th class="center-text">Item</th>
                <th class="center-text">Description</th>
                <th class="center-text">Amount</th>
                <th class="center-text">Quantity</th>
                <th class="center-text">Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @{
                int rowNumber = 1;
            }

            @foreach (var transaction in Model.BillingTransactions)
            {
                decimal? itemTotal = @transaction.ItemPrice * @transaction.ItemQty;
                <tr>
                    <td class="center-text fw-bold small">@rowNumber</td>
                    <td class="center-text">@transaction.createdDate?.ToString("yyyy-MM-dd")</td>
                    <td class="center-text">
                        @if (@transaction.Category == "1")
                        {
                            <div>Food</div>
                        }
                        else if (@transaction.Category == "2")
                        {
                            <div>VAS</div>
                        }
                        else if (@transaction.Category == "3")
                        {
                            <div>ETC</div>
                        }
                    </td>
                    <td>@transaction.BillingItem</td>
                    <td>@transaction.Description</td>
                    <td class="right-text">@transaction.ItemPrice</td>
                    <td class="right-text">@transaction.ItemQty</td>
                    <td class="right-text">@itemTotal</td>


                  
                    <td class="center-text">
                        <form method="post" asp-page-handler="Deleteddd" onsubmit="return confirmDelete();">
                            <input type="hidden" name="id" value="@transaction.Id" />
                            <button type="submit" class="delete-button btn-sm">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </form>
                    </td>

                    
                </tr>
                rowNumber++;
                @if (Model.TotalAmount == 0) // Avoid redundant calculations
                {
                    Model.TotalAmount = Model.BillingTransactions.Sum(t => t.ItemPrice * t.ItemQty);
                }
            }
            <tr>
                <th colspan="7" style="text-align: right;">Grand Total</th>
                <td class="right-text">@Model.BillingTransactions.Sum(t => t.ItemPrice * t.ItemQty)</td>
                <td></td>
            </tr>
        </tbody>
    </table>
    </div>
      </div>



    <button class="btn btn-primary mt-4" onclick="printPDF()">Print PDF</button>


    <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="checkoutModalLabel">Modify Check-Out Date</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" id="checkoutForm" asp-page-handler="UpdateCheckout">
                        <div class="mb-3">
                            <label for="checkoutDate" class="form-label">New Check-Out Date</label>
                            <input type="hidden" id="resId" name="reservationId" value="@Model.Reservation.Id" />
                            <input type="date" class="form-control" id="checkoutDate" name="newCheckoutDate" required>
                        </div>
                        <div class="modal-footer">
                           

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" id="saveCheckoutDateBtn" class="btn btn-primary">Save Changes</button>
                         </div>
                    </form>
                </div>
            </div>
        </div>
    </div> 


    


}
else
{
    <div class="alert alert-warning">No billing transactions found..</div>
}
@section Scripts {



    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

    <!-- jQuery UI library -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#foodItemSearch').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Billing/Index?handler=OnGetFoodItemsAsync',
                        type: 'GET',
                        dataType: 'json',  // Expect JSON response
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            // Check if the response is an array (or valid JSON)
                            if (Array.isArray(data)) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.name,  // Display name in autocomplete suggestions
                                        value: item.id     // Set the value to the item's ID
                                    };
                                }));
                            } else {
                                console.error('Unexpected response format:', data);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('AJAX Error:', status, error);
                            console.error('Response Text:', xhr.responseText);  // Log detailed response for debugging

                            // Check if the response is HTML (error page)
                            if (xhr.responseText.startsWith('<!DOCTYPE html>')) {
                                console.error('Received an HTML page instead of JSON. Possible server error.');
                            }
                        }
                    });
                },
                select: function (event, ui) {
                    event.preventDefault();  // Prevent the default action only on item selection
                    $('#selectedFoodId').val(ui.item.value);  // Set the hidden field with the selected item ID
                    $('#submitBtn').prop('disabled', false);  // Enable the submit button after a valid selection
                }
            });
        });





        async function printPDF() {
            // Ensure jsPDF is loaded
            if (window.jspdf) {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();

                doc.autoTable({
                    html: '#invoice_header table',
                    startY: 20,
                    styles: {
                        halign: 'center',
                        fontSize: 16,
                        font: 'PTSans'
                    },
                    headStyles: {},
                });

                const afterFirstTableY1 = doc.lastAutoTable.finalY + 10;

                doc.autoTable({
                    html: '#invoice_display table',
                    startY: afterFirstTableY1,
                    theme: 'plain',
                    tableWidth: 'wrap',
                    columnStyles: {
                        0: { cellWidth: 40 },
                        1: { cellWidth: 60 },
                    },
                    styles: {
                        overflow: 'linebreak',
                        cellPadding: 2,
                        fontSize: 10
                    },
                });

                const afterFirstTableY = doc.lastAutoTable.finalY + 10;

                doc.autoTable({
                    html: '#billing_table table',
                    startY: afterFirstTableY,
                    headStyles: {
                        fillColor: [33, 47, 60]
                    },
                });

                const pdfBlob = doc.output('blob');
                const url = URL.createObjectURL(pdfBlob);
                window.open(url);
            } else {
                console.error('jsPDF is not loaded');
            }
        }


        $(document).ready(function () {
           
            $("#btnSaveNewCheckout").click(function () {
                
                console.log("----------------ksg")
                    $.ajax({
                    type: "POST",
                    url: "/Billing/Index/UpdateCheckoutDate",                  
                    headers: {
                        "RequestVerificationToken": $("input:hidden[name='__RequestVerificationToken']").val() 
                        },
                    data: $("#NewCheckOutDt").serialize(),
                    success: function (response) {
                            if (response.success) {
                               console.log("It works!")
                                alert("Checkout date added successfully!");
                            } else {
                                alert("Error adding checkout date: " + response.errorMessage);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error("AJAX Error:", textStatus, errorThrown);
                            // Handle errors appropriately (e.g., display error message to user)
                        }
                    });
                
            });
        });

        

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('billingForm');
            const submitBtn = document.getElementById('submitBtn');
            const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');

            function checkFields() {
                let allFilled = true;
                requiredFields.forEach(function (field) {
                    console.log(field.name, field.value); // Debugging: Log field name and value
                    if (!field.value.trim()) {
                        allFilled = false;
                    }
                });
                console.log('All fields filled:', allFilled); // Debugging: Log allFilled status
                submitBtn.disabled = !allFilled;
                console.log('Submit button status:', submitBtn.disabled); // Debugging: Log button status
            }

            requiredFields.forEach(function (field) {
                field.addEventListener('input', checkFields);
            });
            checkFields(); // Initial check


        });

        function confirmDelete() {
            return confirm("Are you sure you want to delete this transaction?");
        }

        function confirmCheckOut() {
            return confirm("Are you sure you want to process Check-Out?");
        }


        function confirmCheckIn() {
            return confirm("Are you sure you want to process Check-In?");
        }

        function confirmUpdateCheckOut() {
            
            return confirm("Are you sure you want to update the check-out date?");
        }
        // document.getElementById('checkInButton').addEventListener('click', function(event) {
        //     event.preventDefault(); // Prevent the default form submission
            
        //     Swal.fire({
        //         title: 'Are you sure?',
        //         text: 'Do you want to check in?',
        //         icon: 'warning',
        //         showCancelButton: true,
        //         confirmButtonText: 'Yes, check in!',
        //         cancelButtonText: 'No, cancel'
        //     }).then((result) => {
        //         if (result.isConfirmed) {
        //             document.getElementById('checkInForm').submit(); // Submit the form if confirmed
        //         }
        //     });
        // });


        $("#checkInForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to check in",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form manually
                    $(this).unbind('submit').submit();
                }
            });
        });
        $("#checkOutForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to check in",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form manually
                    $(this).unbind('submit').submit();
                }
            });
        });



    </script>

    <style>
      
    </style>
}


