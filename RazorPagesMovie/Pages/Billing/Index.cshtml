@page
@model RazorPagesMovie.Pages.Billing.IndexModel
@{
    ViewData["Title"] = "Index";
}


<input type="hidden" id="reservationId" value="@Model.Reservation.Id" />



<div class="card mb-2" id="headbox">
    <div class="card-body text-center">
        <h2 class="m-0 display-6 display-md-5 display-lg-4">Billing Information</h2>
    </div>
</div>


<div class="row">
    <div class="col-md-6" id="invoice_details">
        <div class="printtab">
        <table class="table table-bordered invoice-info ">
            <thead>
                <tr class="keep-row">
                    <th  colspan="2">Invoice Details</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Reservation != null)
                {
                    <input type="hidden" asp-for="Reservation.MasterbillId">
                    <input type="hidden" asp-for="Reservation.Id">
                    <input type="hidden" asp-for="Reservation.CustomerName">
                    <input type="hidden" asp-for="Reservation.SelectedRooms">
                    <input type="hidden" asp-for="Reservation.SelectedRoomsNos">
                    <input type="hidden" asp-for="Reservation.CheckInDate">
                    <input type="hidden" asp-for="Reservation.ExpectedCheckOutDate">
                    <input type="hidden" asp-for="Reservation.Mobile">
                    <input type="hidden" asp-for="Reservation.Address">
                    <input type="hidden" asp-for="Reservation.Country">
                    <input type="hidden" asp-for="Reservation.GuestCount">
                    <input type="hidden" asp-for="Reservation.NIN">


                    <tr class="keep-row">
                        <td >Invoice No:</td>
                        <td>@Model.Reservation.CheckInDate.ToString("yyyyMMdd") - @Model.Reservation.Id</td>
                    </tr>
                    <tr class="keep-row">
                        <td>Status:</td>
                        <td>


                                @if (@Model.Reservation.status == 0)
                                {
                                    <div>PENDING</div>
                                }
                                else if (@Model.Reservation.status == 1)
                                {
                                    <div>Checked-In</div>
                                }
                                else if (@Model.Reservation.status == 2)
                                {
                                    <div>Checked-Out</div>
                                }
                                else if (@Model.Reservation.status == 3)
                                {
                                    <div>Finalized Invoice</div>
                                }

                                                   
                    </tr>
                    <tr class="keep-row">
                        <td>Customer Name:</td>
                        <td>@Model.Reservation.CustomerName</td>
                    </tr>
                    <tr class="keep-row">
                        <td>Reserved Rooms:</td>
                        <td>@Model.Reservation.SelectedRoomsNos</td>
                    </tr>
                        <tr>
                            <td>Check-In Initialize:</td>
                            <td>
                                <form id="checkInForm" method="post" asp-page-handler="CheckIn">
                                    <div class="d-flex">
                                    <input type="hidden" name="sid" value="@Model.Reservation.Id" />

                                    <!-- Date Field -->
                                        <input asp-for="Reservation.CheckInDate" class="form-control me-2" />

                                    <!-- Submit Button -->
                                    <button type="submit" class="btn btn-success btn-sm" id="checkinBtn">
                                        CheckIn
                                    </button>
                                    </div>
                                </form>
                            </td>
                        </tr>
                   @*  <tr class="keep-row">
                        <td>Check-In Date:</td>
                        <td>@Model.Reservation.CheckInDate.ToShortDateString()</td>
                    </tr> *@



                    @* <tr class="print-exclude">
                        <td>Check-Out Date:</td>
                
                        <td>

                            @await Html.PartialAsync("_partialEditCheckoutDate", @Model.Reservation)
                          
                        </td>
                    </tr> *@

                        <tr>
                            <td>Check-Out Date:</td>
                            <td>
                                <form id="checkOutDateForm" method="post" asp-page-handler="EditCheckoutDate">
                                    <div class="d-flex">
                                        <input type="hidden" name="sid" value="@Model.Reservation.Id" />

                                        <!-- Date Field -->
                                        <input asp-for="Reservation.ExpectedCheckOutDate" class="form-control me-2" />

                                        <!-- Submit Button -->
                                        <button type="submit" class="btn btn-primary btn-sm" id="checkOutDateBtn">
                                            Update
                                        </button>
                                    </div>
                                </form>
                            </td>
                        </tr>

                 
                   
                    <tr class="print-exclude">
           

                        <td>Initialize Check-Out</td>
                        <td>

                                <form method="post"  asp-page-handler="CheckOut" id="checkOutForm" class="text-right" style="margin-right: 70px;">

                                    <input type="hidden" name="sid" value="@Model.Reservation.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm" id="checkOutBtn">
                                   Check Out
                                </button>
                            </form>
                        </td>
                    </tr>

                        <tr class="print-exclude">
                            <td>Discount Rate:</td>
                            <td>
                               
                                    
                                   
                                    <form method="post" asp-page-handler="Discount" id="discountForm">
                                    <div class="d-flex">

                                     
                                        <input type="hidden" name="sid" value="@Model.Reservation.Id" />
                                        <input   asp-for="Reservation.DiscountRate" class="form-control me-2" value="@Model.Reservation.DiscountRate" type="number" min="0" max="100" step="0.01" />
                                        <button type="submit" class="btn btn-primary btn-sm" id="updateDiscountBtn">Update</button>
                                    </div>
                                    </form>
                                
                            </td>
                        </tr>


                }
                else
                {

                    <tr>
                        <td colspan="2">Reservation not found.</td>
                    </tr>
                }
            </tbody>
        </table>

        </div>
    </div>

    
    
    <div class="col-md-6">
        <div class="print-exclude">
            <table class="table-borderless" style="min-width:100%">
                <thead>
                    <tr>
                        <th colspan="2" class="text-center">Food & Beverage Billing</th>
                    </tr>
                </thead>
                <tbody>
                    <form method="post" id="billingForm">
                    <tr>
                        <td class="fw-bold">Food Category</td>
                        <td>
                            <select asp-for="NewTransaction.Category" class="form-control" id="billingCategory">
                                <option value="1">Food</option>
                                <option value="2">Beverages</option>
                               @*  <option value="3">VAS</option>
                                <option value="4">ETC</option> *@
                            </select>
                            <span asp-validation-for="NewTransaction.Category" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Food Item</td>
                        <td>
                            <div class="d-flex">
                                <input id="foodItemSearch" class="form-control me-2" asp-for="NewTransaction.BillingItem" placeholder="Search for a food item" disabled />
                                <input type="hidden" id="selectedFoodId" />

                                <input id="beverageItemSearch" class="form-control ms-2" asp-for="NewTransaction.BillingItem" placeholder="Search for a beverage" disabled />
                                <input type="hidden" id="selectedBeverageId" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Item Amount</td>
                        <td>
                            <input id="itemPrice" asp-for="NewTransaction.ItemPrice" class="form-control" type="number" step="0.01" required readonly />
                            <span asp-validation-for="NewTransaction.ItemPrice" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Item Quantity</td>
                        <td>
                            <input asp-for="NewTransaction.ItemQty" class="form-control" type="number" step="0.01" required />
                            <span asp-validation-for="NewTransaction.ItemQty" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Description</td>
                        <td>
                            <textarea asp-for="NewTransaction.Description" class="form-control"></textarea>
                            <span asp-validation-for="NewTransaction.Description" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" class="text-end">
                            <input type="hidden" asp-for="Reservation.MasterbillId" />
                            <input type="hidden" asp-for="Reservation.Id" />
                            <input type="hidden" asp-for="Reservation.CustomerName" />
                            <input type="hidden" asp-for="Reservation.SelectedRooms" />
                            <input type="hidden" asp-for="Reservation.CheckInDate" />
                            <input type="hidden" asp-for="Reservation.ExpectedCheckOutDate" />
                            <input type="hidden" asp-for="Reservation.Mobile" />
                            <input type="hidden" asp-for="Reservation.Address" />
                            <input type="hidden" asp-for="Reservation.Country" />
                            <input type="hidden" asp-for="Reservation.GuestCount" />
                            <input type="hidden" asp-for="Reservation.NIN" />

                            <button type="submit" id="submitBtn" class="btn btn-success rounded-pill mt-2 mb-4" disabled>Add Transaction</button>
                        </td>
                    </tr>
                    </form>
                </tbody>
            </table>


    </div>
        <div class="row g-3">
            <!-- Additional Charges -->
            <div class="col-md-4">
                <div class="card border-primary shadow-sm h-100">
                    <div class="card-body d-flex flex-column justify-content-between">
                        <p class="fw-bold">Additional Charges</p>
                        <button type="button" class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#additionalChargesModal">
                            Add
                        </button>
                    </div>
                </div>
            </div>

            <!-- Print Invoice -->
            <div class="col-md-4">
                <div class="card border-success shadow-sm h-100">
                    <div class="card-body d-flex flex-column justify-content-between">
                        <p class="fw-bold">Print Invoice</p>
                        <button class="btn btn-success w-100" onclick="printPDF()">Print</button>
                    </div>
                </div>
            </div>

            <!-- Finalize the Bill -->
            <div class="col-md-4">
                <div class="card border-warning shadow-sm h-100">
                    <div class="card-body d-flex flex-column justify-content-between">
                        <p class="fw-bold">Finalize the Bill</p>
                        <button class="btn btn-warning w-100" onclick="finalizeBill()">Finalize</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>






@* this is to printing pdf purpose *@
<div class="col-md-12" id="invoice_header">
    <table class="header-table" style="display:none">
        <tr>
            <th>
                <h1 class="name">Hotel Ritas</h1>
            </th>
        </tr>
        <tbody>
            <tr>
                <td style="font-size: 12px;">
                    Narigama, Hikkaduwa<br>
                    <span style="font-size: 10px;">
                        Phone: +94 71 123 4567<br>
                        Email: info@hotelritas.com
                    </span>
                </td>
            </tr>
        </tbody>
    </table>
</div>


<div class="col-md-6" id="invoice_display">
<table class="table table-bordered invoice-info"  style="display:none" >
    <thead>
        <tr class="keep-row">
            <th colspan="2">Invoice Details</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Reservation != null)
        {
            <input type="hidden" asp-for="Reservation.MasterbillId">
            <input type="hidden" asp-for="Reservation.Id">
            <input type="hidden" asp-for="Reservation.CustomerName">
            <input type="hidden" asp-for="Reservation.SelectedRooms">
            <input type="hidden" asp-for="Reservation.SelectedRoomsNos">
            <input type="hidden" asp-for="Reservation.CheckInDate">
            <input type="hidden" asp-for="Reservation.ExpectedCheckOutDate">
            <input type="hidden" asp-for="Reservation.Mobile">
            <input type="hidden" asp-for="Reservation.Address">
            <input type="hidden" asp-for="Reservation.Country">
            <input type="hidden" asp-for="Reservation.GuestCount">
            <input type="hidden" asp-for="Reservation.NIN">


            <tr class="keep-row">
                <td>Invoice No:</td>
                <td>@Model.Reservation.CheckInDate.ToString("yyyyMMdd") - @Model.Reservation.Id</td>
            </tr>
            <tr class="keep-row">
                <td>Status:</td>
                <td>


                    @if (@Model.Reservation.status == 0)
                    {
                        <div>PENDING</div>
                    }
                    else if (@Model.Reservation.status == 1)
                    {
                        <div>Checked-In</div>
                    }
                    else if (@Model.Reservation.status == 2)
                    {
                        <div>Checked-Out</div>
                    }
                    else if (@Model.Reservation.status == 3)
                    {
                        <div>Finalized Invoice</div>
                    }




            </tr>
            <tr class="keep-row">
                <td>Customer Name:</td>
                <td>@Model.Reservation.CustomerName</td>
            </tr>
            <tr class="keep-row">
                <td>Reserved Rooms:</td>
                <td>@Model.Reservation.SelectedRoomsNos</td>
            </tr>
           

            <tr class="keep-row">
                <td>Check-In Date:</td>
                    <td>@Model.Reservation.CheckInDate.ToString("yyyy-MM-dd")</td>
            </tr>
            <tr class="keep-row">
                <td>Check-Out Date:</td>
                    <td>@Model.Reservation.ExpectedCheckOutDate.ToString("yyyy-MM-dd")</td>
            </tr>



        }
        else
        {

            <tr>
                <td colspan="2">Reservation not found.</td>
            </tr>
        }
    </tbody>
</table>
</div>







<!-- Display Billing Transactions -->
<h4 class="border border-2 border" style="background-color: #8294C4; color:azure;">Billing Transactions</h4>
@if (Model.BillingTransactions != null && Model.BillingTransactions.Any())
{
    <div class="printtab">
    <div id="billing_table">
    <table class="table table-bordered" id="invoiceTable">
        <thead>
            <tr>
                <th class="center-text">#</th>
@*                 <th class="center-text">Date</th>
 *@                <th class="center-text" style="  min-width: 120px;">Date</th>
                <th class="center-text">Category</th>
                <th class="center-text">Item</th>
                <th class="center-text">Description</th>
                <th class="center-text">Amount</th>
                <th class="center-text">Quantity</th>
                <th class="center-text">Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @{
                int rowNumber = 1;
            }

            @foreach (var transaction in Model.BillingTransactions)
            {
                decimal? itemTotal = @transaction.ItemPrice * @transaction.ItemQty;
                <tr>
                    <td class="center-text fw-bold small">@rowNumber</td>
                    <td class="center-text">@transaction.createdDate?.ToString("yyyy-MM-dd")</td>
                    <td class="center-text">
                        @if (@transaction.Category == "1")
                        {
                            <div>Food</div>
                        }
                        else if (@transaction.Category == "2")
                        {
                            <div>Beverages</div>
                        }
                        else if (@transaction.Category == "3")
                        {
                            <div>Additional</div>
                        }
                        else if (@transaction.Category == "4")
                                {
                                    <div>VAS</div>
                                }
                        else if (@transaction.Category == "5")
                                {
                                    <div>OTHER</div>
                                }




                              





                    </td>
                    <td>@transaction.BillingItem</td>
                    <td>@transaction.Description</td>
                    <td class="right-text">@transaction.ItemPrice</td>
                    <td class="right-text">@transaction.ItemQty</td>
                    <td class="right-text">@itemTotal</td>


                  
                    <td class="center-text">
                        <form method="post" asp-page-handler="Deleteddd" onsubmit="return confirmDelete();">
                            <input type="hidden" name="id" value="@transaction.Id" />
                            <button type="submit" class="delete-button btn-sm">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </form>
                    </td>

                    
                </tr>
                rowNumber++;
                @if (Model.TotalAmount == 0) // Avoid redundant calculations
                {
                    Model.TotalAmount = Model.BillingTransactions.Sum(t => t.ItemPrice * t.ItemQty);
                }
            }
            <tr>
                <th colspan="7" style="text-align: right;">Grand Total</th>
                <td class="right-text">@Model.BillingTransactions.Sum(t => t.ItemPrice * t.ItemQty)</td>
                <td></td>
            </tr>
        </tbody>
    </table>
    </div>
  </div>

    <div id="pdf_footer" style="display:none;">
        <table class="footer-table" style="width: 100%; margin-top: 20px;">
            <tr>
                <td style="font-size: 10px;">
                    <strong>Terms and Conditions:</strong><br>
                    1. All payments are non-refundable.<br>
                    2. Check-in time is at 2:00 PM and check-out time is at 11:00 AM.<br>
                    3. Guests are responsible for any damages to the property.<br>
                    4. Please present your ID upon check-in.<br>
                    5. Management reserves the right to refuse service.
                </td>
            </tr>
        </table>
    </div>





    <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="checkoutModalLabel">Modify Check-Out Date</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" id="checkoutForm" asp-page-handler="UpdateCheckout">
                        <div class="mb-3">
                            <label for="checkoutDate" class="form-label">New Check-Out Date</label>
                            <input type="hidden" id="resId" name="reservationId" value="@Model.Reservation.Id" />
                            <input type="date" class="form-control" id="checkoutDate" name="newCheckoutDate" required>
                        </div>
                        <div class="modal-footer">
                           

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" id="saveCheckoutDateBtn" class="btn btn-primary">Save Changes</button>
                         </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="additionalChargesModal" tabindex="-1" aria-labelledby="additionalChargesModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="additionalChargesModalLabel">Additional Charges</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="additionalChargesForm">

                        <input type="hidden" id="invoiceNo" value="@Model.Reservation.Id" />
                        <div class="mb-3">
                            <label for="category" class="form-label">Category</label>
                            <select asp-for="NewTransaction.Category" class="form-control" id="category" name="category" required>
                               @*  <option value="1">Food</option>
                                <option value="2">Beverages</option> *@
                                  <option value="3">Additional Charges</option>
                                  <option value="4">VAS</option>
                                  <option value="5">OTHER</option>
                            </select>
                            <span asp-validation-for="NewTransaction.Category" class="text-danger"></span>
@*                             <input type="text" class="form-control" id="category" name="category" required>
 *@                        </div>
                        <div class="mb-3">
                            <label for="item" class="form-label">Item</label>
                            <input type="text" class="form-control" id="item" name="item" required>
                        </div>
                        <div class="mb-3">
                            <label for="amount" class="form-label">Amount</label>
                            <input type="number" class="form-control" id="amount" name="amount" required>
                        </div>
                        <div class="mb-3">
                            <label for="qty" class="form-label">Quantity</label>
                            <input type="number" class="form-control" id="qty" name="qty" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveAdditionalCharges">Save changes</button>
                </div>
            </div>
        </div>
    </div>


}
else
{
    <div class="alert alert-warning">No billing transactions found..</div>
}
@section Scripts {

    <style>
        .bordered-container {
            border: 1px solid #ccc; /* Light gray border */
            border-radius: 5px; /* Rounded corners */
            background-color: #f9f9f9; /* Light background color */
        }

       /*  #checkinBtn {
            margin-right: 70px;
        }
 */
      
    </style>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

    <!-- jQuery UI library -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

    <script>



        //below is the food search auto complete in billing page
    $(document).ready(function() {
        $("#foodItemSearch").autocomplete({
            source: function(request, response) {
                $.ajax({
                    url: "/Billing?handler=FoodItems",
                    dataType: "json",
                    data: { term: request.term },
                    success: function(data) {
                        response($.map(data, function(item) {
                            return {
                                label: item.foodName,
                                value: item.foodName,
                                id: item.id,
                                price: item.price
                            };
                        }));
                    }
                });
            },
            select: function(event, ui) {
                $('#selectedFoodId').val(ui.item.id);
                $('#itemPrice').val(ui.item.price);
                    $('#foodItemSearch').val(ui.item.foodName);
            }
        });
    });
    
    //below is the beverage search auto complete in billing page
        $(document).ready(function () {
            $("#beverageItemSearch").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Billing?handler=BeverageItems",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.beverageName,
                                    value: item.beverageName,
                                    id: item.id,
                                    price: item.price
                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#selectedBeverageId').val(ui.item.id);
                    $('#itemPrice').val(ui.item.price);
                    $('#beverageItemSearch').val(ui.item.beverageName);
                }
            });
        });



     document.addEventListener('DOMContentLoaded', function () {
            const categoryDropdown = document.getElementById('billingCategory');
            const foodInput = document.getElementById('foodItemSearch');
            const beverageInput = document.getElementById('beverageItemSearch');

            // Function to handle the enabling/disabling of inputs
            function handleCategoryChange() {
                const selectedValue = categoryDropdown.value;

                // Enable/disable based on selected category
                if (selectedValue === "1") { // Food selected
                    foodInput.disabled = false;
                    beverageInput.disabled = true;
                } else if (selectedValue === "2") { // Beverages selected
                    foodInput.disabled = true;
                    beverageInput.disabled = false;
                } else { // Other categories
                    foodInput.disabled = true;
                    beverageInput.disabled = true;
                }
            }

            // Set initial state
            handleCategoryChange();

            // Add event listener to the dropdown
            categoryDropdown.addEventListener('change', handleCategoryChange);
        });

        function finalizeBill() {
            // SweetAlert2 confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to finalize the bill?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, finalize it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Proceed with AJAX call if confirmed
                    $.ajax({
                        url: '/Billing/Index?handler=BillFinalized', // Razor Page URL with the handler
                        type: 'POST',
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(), // CSRF Token
                            ReservationId: '@Model.Reservation.Id' // Send reservation ID if required
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire(
                                    'Finalized!',
                                    'The bill has been finalized.',
                                    'success'
                                ).then(() => {
                                    window.location.href = '/Billing?id=@Model.Reservation.Id';  // Redirect to another page
                                });
                            } else {
                                Swal.fire('Error!', 'Failed to finalize the bill.', 'error');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error finalizing the bill:', error);
                            Swal.fire('Error!', 'An error occurred. Please try again.', 'error');
                        }
                    });
                }
            });
        }

        async function printPDF() {
            // Ensure jsPDF is loaded
            if (window.jspdf) {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();

                // Set font for the entire document to PT Sans
                doc.setFont("PTSans");

                // Set the header color
                doc.setTextColor(33, 47, 60); // Adjust this to match your header color

                // Invoice Header
                doc.autoTable({
                    html: '#invoice_header table',
                    startY: 20,
                    styles: {
                        halign: 'center',
                        fontSize: 16,
                        font: 'PTSans'
                    },
                    headStyles: {},
                    didParseCell: function (data) {
                        // Reduce font size for the contact details (phone, email)
                        if (data.cell.raw && data.cell.raw.innerText.includes('Narigama, Hikkaduwa')) {
                            data.cell.styles.fontSize = 12;  // Set smaller font for address
                        }
                        if (data.cell.raw && data.cell.raw.innerText.includes('Phone:')) {
                            data.cell.styles.fontSize = 10;  // Set smaller font for phone and email
                        }
                    }
                });

                const afterFirstTableY1 = doc.lastAutoTable.finalY + 10;

                // Invoice Display
                doc.autoTable({
                    html: '#invoice_display table',
                    startY: afterFirstTableY1,
                    theme: 'plain',
                    tableWidth: 'wrap',
                    columnStyles: {
                        0: { cellWidth: 40 },
                        1: { cellWidth: 60 },
                    },
                    styles: {
                        overflow: 'linebreak',
                        cellPadding: 2,
                        fontSize: 10
                    },
                });

                const afterFirstTableY = doc.lastAutoTable.finalY + 10;

                // Billing Transactions
                doc.autoTable({
                    html: '#billing_table table',
                    startY: afterFirstTableY,
                    headStyles: {
                        fillColor: [33, 47, 60],
                        halign: 'center'
                    },
                    columnStyles: {
                        0: { halign: 'left' },  // ID column aligned to left
                        1: { halign: 'left' },    // Date column aligned to left
                        2: { halign: 'left' },   // Category column aligned to left
                        3: { halign: 'center' },  // Item column aligned to center
                        4: { halign: 'left' },   // Description column aligned to left
                        5: { halign: 'right' },   // Amount column aligned to right
                        6: { halign: 'right' },   // Quantity column aligned to right
                        7: { halign: 'right' }    // Total column aligned to right
                    }
                });

                // Calculate the position for the footer
                const footerY = doc.internal.pageSize.height - 40; // 40 units from the bottom of the page

                // Draw a line above the footer
                doc.setLineWidth(0.5);
                doc.line(10, footerY, 200, footerY); // Draw a line from left to right

                // Set footer text color to match header
                doc.setTextColor(33, 47, 60); // Match this color to your header

                // Add Footer Text
                doc.setFontSize(10);
                doc.text("Terms and Conditions:", 10, footerY + 10);
                doc.text("1. All payments are non-refundable.", 10, footerY + 15);
                doc.text("2. Check-in time is at 2:00 PM and check-out time is at 11:00 AM.", 10, footerY + 20);
                doc.text("3. Guests are responsible for any damages to the property.", 10, footerY + 25);
                doc.text("4. Please present your ID upon check-in.", 10, footerY + 30);
                doc.text("5. Management reserves the right to refuse service.", 10, footerY + 35);

                const pdfBlob = doc.output('blob');
                const url = URL.createObjectURL(pdfBlob);
                window.open(url);
            } else {
                console.error('jsPDF is not loaded');
            }
        }





        $(document).ready(function () {
           
            $("#btnSaveNewCheckout").click(function () {
                
                console.log("----------------ksg")
                    $.ajax({
                    type: "POST",
                    url: "/Billing/Index/UpdateCheckoutDate",                  
                    headers: {
                        "RequestVerificationToken": $("input:hidden[name='__RequestVerificationToken']").val() 
                        },
                    data: $("#NewCheckOutDt").serialize(),
                    success: function (response) {
                            if (response.success) {
                               console.log("It works!")
                                alert("Checkout date added successfully!");
                            } else {
                                alert("Error adding checkout date: " + response.errorMessage);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error("AJAX Error:", textStatus, errorThrown);
                            // Handle errors appropriately (e.g., display error message to user)
                        }
                    });
                
            });
        });

        

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('billingForm');
            const submitBtn = document.getElementById('submitBtn');
            const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');

            function checkFields() {
                let allFilled = true;
                requiredFields.forEach(function (field) {
                    console.log(field.name, field.value); // Debugging: Log field name and value
                    if (!field.value.trim()) {
                        allFilled = false;
                    }
                });
                console.log('All fields filled:', allFilled); // Debugging: Log allFilled status
                submitBtn.disabled = !allFilled;
                console.log('Submit button status:', submitBtn.disabled); // Debugging: Log button status
            }

            requiredFields.forEach(function (field) {
                field.addEventListener('input', checkFields);
            });
            checkFields(); // Initial check


        });

        function confirmDelete() {
            return confirm("Are you sure you want to delete this transaction?");
        }

        function confirmCheckOut() {
            return confirm("Are you sure you want to process Check-Out?");
        }


        function confirmCheckIn() {
            return confirm("Are you sure you want to process Check-In?");
        }

        function confirmUpdateCheckOut() {
            
            return confirm("Are you sure you want to update the check-out date?");
        }
        




        $("#checkInForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to check in",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form manually
                    $(this).unbind('submit').submit();
                }
            });
        });
        $("#checkOutForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to check in",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form manually
                    $(this).unbind('submit').submit();
                }
            });
        });

        $("#checkOutDateForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to update check out date",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form manually
                    $(this).unbind('submit').submit();
                }
            });
        });

        $("#discountForm").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to Add a Discount",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form manually
                    $(this).unbind('submit').submit();
                }
            });
        });


        $(document).ready(function () {
            $('#saveAdditionalCharges').click(function () {
                var formData = {
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(), // Antiforgery token
                    invoiceNo: $('#invoiceNo').val(),
                    category: $('#category').val(),
                    item: $('#item').val(),
                    amount: parseFloat($('#amount').val()), // Convert to decimal
                    qty: parseInt($('#qty').val()),         // Convert to integer
                    description: $('#description').val()
                };

                $.ajax({
                    url: '/Billing/Index?handler=AddAdditionalCharges', // Adjust the URL for your Razor Page handler
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            alert('Additional charges added successfully!');
                            $('#additionalChargesModal').modal('hide');

                            // Redirect to the specified URL after success
                            window.location.href = '/Billing?id=' + $('#invoiceNo').val(); // Redirect using invoiceNo
                        } else {
                            alert('Error: ' + response.error);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error: ", xhr.responseText);
                        alert('An error occurred while saving additional charges.');
                    }
                });
            });
        });





    </script>

    <style>
      
    </style>
}


